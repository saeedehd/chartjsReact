import React, { Component } from 'react';
import { Line } from 'react-chartjs-2';
import "chartjs-plugin-lineheight-annotation";

class App extends Component {
 constructor(props){
   super(props);
   this.state = {
     data: {
       labels: ["1", "2", "3", "4", "5"],
       datasets: [
         {
           label: "videos Mades",
           backgroundColor: "rgba(255,0,255,0.75)",
           data: [10, 25, 13, 5, 30, 7, 2]
         },
         {
           label: "Subscriptions",
           backgroundColor: "rgba(0,255,255,0.5)",
           data:[3, 5, 8, 15, 22, 47, 12]
         }
       ]
     }
   }
 } 
 componentDidMount()  {
   console.log(this.state.data);
 }
 setGradientColor = (canvas, color) => {
   const ctx = canvas.getContext('2d');
   const gradient = ctx.createLinearGradient(0, 0, 600, 550);
   gradient.addColorStop(0, color);
   gradient.addColorStop(0.95, "rgba(133, 122, 144, 0.5)");
   return gradient;
 }
 getChartData = canvas => {
   const data = this.state.data;
   if (data.datasets) {
     let colors = ["rgba(255,0,255,0.75)","rgba(0,255,255,0.5)"];
     data.datasets.forEach((set,i)=> {
       set.backgroundColor = this.setGradientColor(canvas, colors[i]);
       set.borderColor = "blue";
       set.borderWidth = 2;

     });
   }
   return data;
 }
 render() {
   return (
    <div style={{ position: "relative", width: 600, height: 550}}>
      <h3>Chart Sample</h3>
      <Line
      options={{
        responsive: true,
        lineHeightAnnotation: {
          color: "white",
          shadow: true,
          always: false,
          hover: true,
          noDash: true,
        }
      }}
      data={this.getChartData}
      />
    </div>
   )
 }
}
export default App;
